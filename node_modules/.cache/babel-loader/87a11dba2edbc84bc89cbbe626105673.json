{"ast":null,"code":"var _jsxFileName = \"/Users/Rasheed/WS/REPOS/full-mern-stack-video/client/src/pages/Convert/Convert.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport \"../style.css\";\nimport { credentials } from \"../../credentials\";\nimport DataHound from \"./DataHound\";\nimport Example from \"./Example\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  const [data, setData] = useState([]);\n\n  function get_playlist_id(URL) {\n    //https://www.youtube.com/watch?v=EwdsnGfrd-k&list=PL7RVBKKO9UqyEr8kqLe9152SIktQjDl64\n    const num_equal_signs = (URL.match(/=/g) || []).length;\n    if (URL !== null && num_equal_signs === 1) return URL.split(\"=\")[1];else if (URL !== null && num_equal_signs === 2) return URL.split(\"=\")[2];else return -1;\n  }\n\n  function get_api_URL(playlist_ID, key) {\n    //AIzaSyBK9I7LUg_7JHmSg8QrNhxkwK98MnuOKKQ\n    if (playlist_ID === -1) return \"No GET address\";else return 'https://youtube.googleapis.com/youtube/v3/playlistItems?part=snippet%2CcontentDetails&maxResults=25&playlistId=' + playlist_ID + '&key=' + key;\n  }\n\n  function get_title_list(get_url) {\n    var data = null;\n    var title_list = [];\n    fetch(get_url, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(res => res.json()).then(json => {\n      data = json;\n\n      for (var i = 0; i < data.items.length; i++) {\n        title_list.push(data.items[i].snippet.title);\n      }\n\n      props.userDetails.data = title_list;\n      props.userDetails.DataisLoaded = true;\n    });\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.userDetails.data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n  function clean_title_list(title_list) {\n    const names = title_list.match(/[w']+/g).join(' ').replace(/official/ig, '').replace(/featuring/ig, '').replace(/feat/ig, '').replace(/video/ig, '').replace(/1080p/ig, '').replace(/music/ig, '');\n    console.out(\"names\".names);\n  }\n\n  const {\n    fullURL\n  } = props.userDetails;\n  const playlist_ID = get_playlist_id(fullURL);\n  const get_address = get_api_URL(playlist_ID, credentials.youtube_API_key);\n  const title_list = get_title_list(get_address);\n  const clean_names = clean_title_list(title_list); //search_Spotify(title_list)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"jumbotron text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Conversion Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), fullURL ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: `Converting from: ${fullURL}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No URL entered\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => props.onClear(),\n      children: \"clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Go back \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"playlist_ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 16\n      }, this), \" \", `${playlist_ID}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"GET address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 16\n      }, this), \" \", `${get_address}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Data:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 16\n      }, this), \" \", title_list]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Data:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 16\n      }, this), \" \", props.userDetails.data]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Datahound\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DataHound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n} //<p><b>Data:</b> {`${props.userDetails.data}`}</p>\n\n\n_s(App, \"hhQqYsxLIv1exGOzUvDGOVv6fXw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Rasheed/WS/REPOS/full-mern-stack-video/client/src/pages/Convert/Convert.js"],"names":["React","useState","Link","credentials","DataHound","Example","App","props","data","setData","get_playlist_id","URL","num_equal_signs","match","length","split","get_api_URL","playlist_ID","key","get_title_list","get_url","title_list","fetch","headers","then","res","json","i","items","push","snippet","title","userDetails","DataisLoaded","clean_title_list","names","join","replace","console","out","fullURL","get_address","youtube_API_key","clean_names","onClear"],"mappings":"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","sourcesContent":["import { React, useState } from 'react'\nimport { Link } from \"react-router-dom\";\n\nimport \"../style.css\"\nimport { credentials } from \"../../credentials\"\nimport DataHound from \"./DataHound\"\nimport Example from \"./Example\"\n\nfunction App(props) {\n    const [data, setData] = useState([]);\n\n    function get_playlist_id(URL) {\n        //https://www.youtube.com/watch?v=EwdsnGfrd-k&list=PL7RVBKKO9UqyEr8kqLe9152SIktQjDl64\n        const num_equal_signs = (URL.match(/=/g) || []).length\n        if (URL !== null && num_equal_signs === 1)\n            return URL.split(\"=\")[1];\n        else if (URL !== null && num_equal_signs === 2)\n            return URL.split(\"=\")[2];\n        else\n            return -1\n    }\n\n    function get_api_URL(playlist_ID, key) {\n        //AIzaSyBK9I7LUg_7JHmSg8QrNhxkwK98MnuOKKQ\n        if (playlist_ID === -1)\n            return \"No GET address\"\n        else\n            return 'https://youtube.googleapis.com/youtube/v3/playlistItems?part=snippet%2CcontentDetails&maxResults=25&playlistId=' + playlist_ID + '&key=' + key\n    }\n\n\n    function get_title_list(get_url) {\n        var data = null\n        var title_list = []\n        fetch(get_url, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        })\n            .then((res) => res.json())\n            .then((json) => {\n                data = json\n                for (var i = 0; i < data.items.length; i++) {\n                    title_list.push(data.items[i].snippet.title)\n                }\n                props.userDetails.data = title_list\n                props.userDetails.DataisLoaded = true\n            })\n        return (\n            <p>{props.userDetails.data}</p>\n        )\n    }\n\n    function clean_title_list(title_list){\n        const names = title_list.match(/[w']+/g)\n        .join(' ')\n        .replace(/official/ig, '')\n        .replace(/featuring/ig, '')\n        .replace(/feat/ig, '')\n        .replace(/video/ig, '')\n        .replace(/1080p/ig, '')\n        .replace(/music/ig, '');\n        console.out(\"names\".names)\n    }\n\n\n    const { fullURL } = props.userDetails;\n    const playlist_ID = get_playlist_id(fullURL)\n    const get_address = get_api_URL(playlist_ID, credentials.youtube_API_key)\n    const title_list = get_title_list(get_address)\n    const clean_names = clean_title_list(title_list)\n    //search_Spotify(title_list)\n\n    return (\n        <div class=\"jumbotron text-center\">\n\n            <h1>Conversion Page</h1>\n            {fullURL ? (\n                <h3>{`Converting from: ${fullURL}`}</h3>\n            ) : (\n                <p>No URL entered</p>\n            )}\n            <button type=\"button\" onClick={() => props.onClear()}>\n                clear\n            </button>\n            <br />\n            <button>\n                <Link to=\"/\">Go back </Link>\n            </button>\n            <br />\n            <br />\n\n            <p><b>playlist_ID:</b> {`${playlist_ID}`}</p>\n            <p><b>GET address:</b> {`${get_address}`}</p>\n            <p><b>Data:</b> {title_list}</p>\n            <p><b>Data:</b> {props.userDetails.data}</p>\n\n            <p>Datahound</p>\n            <DataHound />\n        </div>\n    )\n}\n//<p><b>Data:</b> {`${props.userDetails.data}`}</p>\nexport default App"]},"metadata":{},"sourceType":"module"}