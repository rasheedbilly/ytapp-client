{"ast":null,"code":"var _jsxFileName = \"/Users/Rasheed/WS/REPOS/full-mern-stack-video/client/src/pages/Convert/Convert.js\";\nimport { React } from 'react';\nimport { Link } from \"react-router-dom\";\nimport \"../style.css\";\nimport { credentials } from \"../../credentials\";\nimport DataHound from \"./DataHound\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  function get_playlist_id(URL) {\n    //https://www.youtube.com/watch?v=EwdsnGfrd-k&list=PL7RVBKKO9UqyEr8kqLe9152SIktQjDl64\n    const num_equal_signs = (URL.match(/=/g) || []).length;\n    if (URL !== null && num_equal_signs === 1) return URL.split(\"=\")[1];else if (URL !== null && num_equal_signs === 2) return URL.split(\"=\")[2];else return -1;\n  }\n\n  function get_api_URL(playlist_ID, key) {\n    //AIzaSyBK9I7LUg_7JHmSg8QrNhxkwK98MnuOKKQ\n    if (playlist_ID === -1) return \"No GET address\";else return 'https://youtube.googleapis.com/youtube/v3/playlistItems?part=snippet%2CcontentDetails&maxResults=25&playlistId=' + playlist_ID + '&key=' + key;\n  }\n\n  function componentDidMount(get_url, properties) {\n    var data = null;\n    var title_list = [];\n    fetch(get_url).then(res => res.json()).then(json => {\n      data = json;\n\n      for (var i = 0; i < data.items.length; i++) {\n        title_list.push(data.items[i].snippet.title);\n      }\n\n      console.log(title_list);\n    });\n    return data;\n  }\n\n  const {\n    fullURL,\n    data,\n    DataisLoaded\n  } = props.userDetails;\n  const playlist_ID = get_playlist_id(fullURL);\n  const get_address = get_api_URL(playlist_ID, credentials.youtube_API_key);\n  const title_list = componentDidMount(get_address, props.userDetails);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"jumbotron text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Conversion Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), fullURL ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: `${fullURL}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No URL entered\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => props.onClear(),\n      children: \"clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Go back \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"playlist_ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 16\n      }, this), \" \", `${playlist_ID}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"GET address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 16\n      }, this), \" \", `${get_address}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Data:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 16\n      }, this), \" \", `${title_list}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DataHound, {\n      input: props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Rasheed/WS/REPOS/full-mern-stack-video/client/src/pages/Convert/Convert.js"],"names":["React","Link","credentials","DataHound","App","props","get_playlist_id","URL","num_equal_signs","match","length","split","get_api_URL","playlist_ID","key","componentDidMount","get_url","properties","data","title_list","fetch","then","res","json","i","items","push","snippet","title","console","log","fullURL","DataisLoaded","userDetails","get_address","youtube_API_key","onClear"],"mappings":"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","sourcesContent":["import { React } from 'react'\nimport { Link } from \"react-router-dom\";\n\nimport \"../style.css\"\nimport { credentials } from \"../../credentials\"\nimport DataHound from \"./DataHound\"\n\nfunction App(props) {\n\n    function get_playlist_id(URL) {\n        //https://www.youtube.com/watch?v=EwdsnGfrd-k&list=PL7RVBKKO9UqyEr8kqLe9152SIktQjDl64\n        const num_equal_signs = (URL.match(/=/g) || []).length\n        if (URL !== null && num_equal_signs === 1)\n            return URL.split(\"=\")[1];\n        else if (URL !== null && num_equal_signs === 2)\n            return URL.split(\"=\")[2];\n        else\n            return -1\n    }\n\n    function get_api_URL(playlist_ID, key) {\n        //AIzaSyBK9I7LUg_7JHmSg8QrNhxkwK98MnuOKKQ\n        if (playlist_ID === -1)\n            return \"No GET address\"\n        else\n            return 'https://youtube.googleapis.com/youtube/v3/playlistItems?part=snippet%2CcontentDetails&maxResults=25&playlistId=' + playlist_ID + '&key=' + key\n    }\n\n    function componentDidMount(get_url, properties) {\n        var data = null\n        var title_list = []\n        fetch(get_url)\n            .then((res) => res.json())\n            .then((json) => {\n                data = json\n                \n                for (var i = 0; i < data.items.length; i++) {\n                    title_list.push(data.items[i].snippet.title)\n                }\n                console.log(title_list)\n            })\n        return data\n    }\n\n    const { fullURL, data, DataisLoaded } = props.userDetails;\n    const playlist_ID = get_playlist_id(fullURL)\n    const get_address = get_api_URL(playlist_ID, credentials.youtube_API_key)\n    const title_list = componentDidMount(get_address, props.userDetails)\n\n    return (\n        <div class=\"jumbotron text-center\">\n\n            <h1>Conversion Page</h1>\n            {fullURL ? (\n                <h3>{`${fullURL}`}</h3>\n            ) : (\n                <p>No URL entered</p>\n            )}\n            <button type=\"button\" onClick={() => props.onClear()}>\n                clear\n            </button>\n            <button>\n                <Link to=\"/\">Go back </Link>\n            </button>\n            <br />\n            <br />\n            <p><b>playlist_ID:</b> {`${playlist_ID}`}</p>\n            <p><b>GET address:</b> {`${get_address}`}</p>\n            <p><b>Data:</b> {`${title_list}`}</p>\n            <DataHound input={props} />\n\n\n        </div>\n    )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}