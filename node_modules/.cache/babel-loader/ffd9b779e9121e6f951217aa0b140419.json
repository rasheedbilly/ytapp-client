{"ast":null,"code":"var _jsxFileName = \"/Users/Rasheed/WS/REPOS/full-mern-stack-video/client/src/pages/Convert/Convert.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport \"../style.css\";\nimport { credentials } from \"../../credentials\";\nimport DataHound from \"./DataHound\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  const [data, setData] = useState([]);\n\n  function get_playlist_id(URL) {\n    //https://www.youtube.com/watch?v=EwdsnGfrd-k&list=PL7RVBKKO9UqyEr8kqLe9152SIktQjDl64\n    const num_equal_signs = (URL.match(/=/g) || []).length;\n    if (URL !== null && num_equal_signs === 1) return URL.split(\"=\")[1];else if (URL !== null && num_equal_signs === 2) return URL.split(\"=\")[2];else return -1;\n  }\n\n  function get_api_URL(playlist_ID, key) {\n    //AIzaSyBK9I7LUg_7JHmSg8QrNhxkwK98MnuOKKQ\n    if (playlist_ID === -1) return \"No GET address\";else return 'https://youtube.googleapis.com/youtube/v3/playlistItems?part=snippet%2CcontentDetails&maxResults=25&playlistId=' + playlist_ID + '&key=' + key;\n  }\n\n  function get_title_list(get_url) {\n    var data = null;\n    var title_list = [];\n    fetch(get_url, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(res => res.json()).then(json => {\n      data = json; //trim data\n\n      for (var i = 0; i < data.items.length; i++) {\n        title_list.push(data.items[i].snippet.title);\n      } //Remove extra\n\n\n      for (var i = 0; i < title_list.length; i++) {\n        title_list[i] = title_list[i].replace(/\\(.+\\)/ig, '').replace(/\\[.+\\]/ig, '').replace(/official/ig, '').replace(/featuring/ig, '').replace(/feat/ig, '').replace(/video/ig, '').replace(/1080p/ig, '').replace(/music/ig, '').replace(/Audio/ig, ''); //console.log(title_list[i])\n      } //\"https://api.spotify.com/v1/search?query=track%3A{}+artist%3A{}&type=track&offset=0&limit=20\"\n\n\n      var query = \"\";\n\n      for (var i = 0; i < title_list.length; i++) {\n        //onsole.log(title_list[i])\n        if (title_list[i].includes(\"-\")) {\n          query = \"track:\" + title_list[i].split(\"-\")[1].trim() + \"+\" + \"artist:\" + title_list[i].split(\"-\")[0].trim();\n          query = query.replace(/\\s/ig, '%20');\n        } else {\n          query = \"track:Never%20Gonna%20Give%20You%20Up+artist:Rick%20Ashley\";\n        }\n\n        title_list[i] = query;\n        console.log(title_list[i]);\n      } //clear data\n\n\n      props.userDetails.data = title_list;\n      props.userDetails.DataisLoaded = true;\n    }).then(() => {//console.log(title_list)\n    });\n  }\n\n  const {\n    fullURL\n  } = props.userDetails;\n  const playlist_ID = get_playlist_id(fullURL);\n  const get_address = get_api_URL(playlist_ID, credentials.youtube_API_key);\n  get_title_list(get_address); //const clean_names = clean_title_list(title_list)\n  //search_Spotify(title_list)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"jumbotron text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Conversion Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), fullURL ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: `Converting from: ${fullURL}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No URL entered\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => props.onClear(),\n      children: \"clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Go back \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"playlist_ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 16\n      }, this), \" \", `${playlist_ID}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"GET address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 16\n      }, this), \" \", `${get_address}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Data:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 16\n      }, this), \" \", props.userDetails.data]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Datahound\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n} //<p><b>Data:</b> {`${props.userDetails.data}`}</p>\n\n\n_s(App, \"hhQqYsxLIv1exGOzUvDGOVv6fXw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Rasheed/WS/REPOS/full-mern-stack-video/client/src/pages/Convert/Convert.js"],"names":["React","useState","Link","credentials","DataHound","App","props","data","setData","get_playlist_id","URL","num_equal_signs","match","length","split","get_api_URL","playlist_ID","key","get_title_list","get_url","title_list","fetch","headers","then","res","json","i","items","push","snippet","title","replace","query","includes","trim","console","log","userDetails","DataisLoaded","fullURL","get_address","youtube_API_key","onClear"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAO,cAAP;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAGA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;;AAEA,WAASQ,eAAT,CAAyBC,GAAzB,EAA8B;AAC1B;AACA,UAAMC,eAAe,GAAG,CAACD,GAAG,CAACE,KAAJ,CAAU,IAAV,KAAmB,EAApB,EAAwBC,MAAhD;AACA,QAAIH,GAAG,KAAK,IAAR,IAAgBC,eAAe,KAAK,CAAxC,EACI,OAAOD,GAAG,CAACI,KAAJ,CAAU,GAAV,EAAe,CAAf,CAAP,CADJ,KAEK,IAAIJ,GAAG,KAAK,IAAR,IAAgBC,eAAe,KAAK,CAAxC,EACD,OAAOD,GAAG,CAACI,KAAJ,CAAU,GAAV,EAAe,CAAf,CAAP,CADC,KAGD,OAAO,CAAC,CAAR;AACP;;AAED,WAASC,WAAT,CAAqBC,WAArB,EAAkCC,GAAlC,EAAuC;AACnC;AACA,QAAID,WAAW,KAAK,CAAC,CAArB,EACI,OAAO,gBAAP,CADJ,KAGI,OAAO,oHAAoHA,WAApH,GAAkI,OAAlI,GAA4IC,GAAnJ;AACP;;AAGD,WAASC,cAAT,CAAwBC,OAAxB,EAAiC;AAC7B,QAAIZ,IAAI,GAAG,IAAX;AACA,QAAIa,UAAU,GAAG,EAAjB;AACAC,IAAAA,KAAK,CAACF,OAAD,EAAU;AACXG,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,kBAAU;AAFL;AADE,KAAV,CAAL,CAMKC,IANL,CAMWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EANnB,EAOKF,IAPL,CAOWE,IAAD,IAAU;AACZlB,MAAAA,IAAI,GAAGkB,IAAP,CADY,CAEZ;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnB,IAAI,CAACoB,KAAL,CAAWd,MAA/B,EAAuCa,CAAC,EAAxC,EAA4C;AACxCN,QAAAA,UAAU,CAACQ,IAAX,CAAgBrB,IAAI,CAACoB,KAAL,CAAWD,CAAX,EAAcG,OAAd,CAAsBC,KAAtC;AACH,OALW,CAOZ;;;AACA,WAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,UAAU,CAACP,MAA/B,EAAuCa,CAAC,EAAxC,EAA4C;AACxCN,QAAAA,UAAU,CAACM,CAAD,CAAV,GAAgBN,UAAU,CAACM,CAAD,CAAV,CACXK,OADW,CACH,UADG,EACS,EADT,EAEXA,OAFW,CAEH,UAFG,EAES,EAFT,EAGXA,OAHW,CAGH,YAHG,EAGW,EAHX,EAIXA,OAJW,CAIH,aAJG,EAIY,EAJZ,EAKXA,OALW,CAKH,QALG,EAKO,EALP,EAMXA,OANW,CAMH,SANG,EAMQ,EANR,EAOXA,OAPW,CAOH,SAPG,EAOQ,EAPR,EAQXA,OARW,CAQH,SARG,EAQQ,EARR,EASXA,OATW,CASH,SATG,EASQ,EATR,CAAhB,CADwC,CAWxC;AACH,OApBW,CAqBZ;;;AACA,UAAIC,KAAK,GAAG,EAAZ;;AACA,WAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,UAAU,CAACP,MAA/B,EAAuCa,CAAC,EAAxC,EAA4C;AACxC;AACA,YAAGN,UAAU,CAACM,CAAD,CAAV,CAAcO,QAAd,CAAuB,GAAvB,CAAH,EAA+B;AAC5BD,UAAAA,KAAK,GAAG,WAAWZ,UAAU,CAACM,CAAD,CAAV,CAAcZ,KAAd,CAAoB,GAApB,EAAyB,CAAzB,EAA4BoB,IAA5B,EAAX,GAAgD,GAAhD,GACP,SADO,GACKd,UAAU,CAACM,CAAD,CAAV,CAAcZ,KAAd,CAAoB,GAApB,EAAyB,CAAzB,EAA4BoB,IAA5B,EADb;AAECF,UAAAA,KAAK,GAAGA,KAAK,CAACD,OAAN,CAAc,MAAd,EAAsB,KAAtB,CAAR;AACH,SAJD,MAKI;AACAC,UAAAA,KAAK,GAAG,4DAAR;AACH;;AACDZ,QAAAA,UAAU,CAACM,CAAD,CAAV,GAAgBM,KAAhB;AAEAG,QAAAA,OAAO,CAACC,GAAR,CAAYhB,UAAU,CAACM,CAAD,CAAtB;AACH,OApCW,CAqCZ;;;AACApB,MAAAA,KAAK,CAAC+B,WAAN,CAAkB9B,IAAlB,GAAyBa,UAAzB;AACAd,MAAAA,KAAK,CAAC+B,WAAN,CAAkBC,YAAlB,GAAiC,IAAjC;AACH,KA/CL,EAgDKf,IAhDL,CAgDU,MAAM,CACR;AACH,KAlDL;AAmDH;;AAID,QAAM;AAAEgB,IAAAA;AAAF,MAAcjC,KAAK,CAAC+B,WAA1B;AACA,QAAMrB,WAAW,GAAGP,eAAe,CAAC8B,OAAD,CAAnC;AACA,QAAMC,WAAW,GAAGzB,WAAW,CAACC,WAAD,EAAcb,WAAW,CAACsC,eAA1B,CAA/B;AACAvB,EAAAA,cAAc,CAACsB,WAAD,CAAd,CApFgB,CAqFhB;AACA;;AAEA,sBACI;AAAK,IAAA,KAAK,EAAC,uBAAX;AAAA,4BAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKD,OAAO,gBACJ;AAAA,gBAAM,oBAAmBA,OAAQ;AAAjC;AAAA;AAAA;AAAA;AAAA,YADI,gBAGJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANR,eAQI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,MAAMjC,KAAK,CAACoC,OAAN,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,eAWI;AAAA;AAAA;AAAA;AAAA,YAXJ,eAYI;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAZJ,eAeI;AAAA;AAAA;AAAA;AAAA,YAfJ,eAgBI;AAAA;AAAA;AAAA;AAAA,YAhBJ,eAkBI;AAAA,8BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,OAAyB,GAAE1B,WAAY,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBJ,eAmBI;AAAA,8BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,OAAyB,GAAEwB,WAAY,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBJ,eAoBI;AAAA,8BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,OAAiBlC,KAAK,CAAC+B,WAAN,CAAkB9B,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,YApBJ,eAsBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,C,CACD;;;GAnHSF,G;;KAAAA,G;AAoHT,eAAeA,GAAf","sourcesContent":["import { React, useState } from 'react'\nimport { Link } from \"react-router-dom\";\n\nimport \"../style.css\"\nimport { credentials } from \"../../credentials\"\nimport DataHound from \"./DataHound\"\n\n\nfunction App(props) {\n    const [data, setData] = useState([]);\n\n    function get_playlist_id(URL) {\n        //https://www.youtube.com/watch?v=EwdsnGfrd-k&list=PL7RVBKKO9UqyEr8kqLe9152SIktQjDl64\n        const num_equal_signs = (URL.match(/=/g) || []).length\n        if (URL !== null && num_equal_signs === 1)\n            return URL.split(\"=\")[1];\n        else if (URL !== null && num_equal_signs === 2)\n            return URL.split(\"=\")[2];\n        else\n            return -1\n    }\n\n    function get_api_URL(playlist_ID, key) {\n        //AIzaSyBK9I7LUg_7JHmSg8QrNhxkwK98MnuOKKQ\n        if (playlist_ID === -1)\n            return \"No GET address\"\n        else\n            return 'https://youtube.googleapis.com/youtube/v3/playlistItems?part=snippet%2CcontentDetails&maxResults=25&playlistId=' + playlist_ID + '&key=' + key\n    }\n\n\n    function get_title_list(get_url) {\n        var data = null\n        var title_list = []\n        fetch(get_url, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        })\n            .then((res) => res.json())\n            .then((json) => {\n                data = json\n                //trim data\n                for (var i = 0; i < data.items.length; i++) {\n                    title_list.push(data.items[i].snippet.title)\n                }\n\n                //Remove extra\n                for (var i = 0; i < title_list.length; i++) {\n                    title_list[i] = title_list[i]\n                        .replace(/\\(.+\\)/ig, '')\n                        .replace(/\\[.+\\]/ig, '')\n                        .replace(/official/ig, '')\n                        .replace(/featuring/ig, '')\n                        .replace(/feat/ig, '')\n                        .replace(/video/ig, '')\n                        .replace(/1080p/ig, '')\n                        .replace(/music/ig, '')\n                        .replace(/Audio/ig, '')\n                    //console.log(title_list[i])\n                }\n                //\"https://api.spotify.com/v1/search?query=track%3A{}+artist%3A{}&type=track&offset=0&limit=20\"\n                var query = \"\"\n                for (var i = 0; i < title_list.length; i++) {\n                    //onsole.log(title_list[i])\n                    if(title_list[i].includes(\"-\")){\n                       query = \"track:\" + title_list[i].split(\"-\")[1].trim() + \"+\" +\n                        \"artist:\" + title_list[i].split(\"-\")[0].trim() \n                        query = query.replace(/\\s/ig, '%20')\n                    }\n                    else{\n                        query = \"track:Never%20Gonna%20Give%20You%20Up+artist:Rick%20Ashley\"\n                    }\n                    title_list[i] = query\n                    \n                    console.log(title_list[i])\n                }\n                //clear data\n                props.userDetails.data = title_list\n                props.userDetails.DataisLoaded = true\n            })\n            .then(() => {\n                //console.log(title_list)\n            })\n    }\n\n\n\n    const { fullURL } = props.userDetails;\n    const playlist_ID = get_playlist_id(fullURL)\n    const get_address = get_api_URL(playlist_ID, credentials.youtube_API_key)\n    get_title_list(get_address)\n    //const clean_names = clean_title_list(title_list)\n    //search_Spotify(title_list)\n\n    return (\n        <div class=\"jumbotron text-center\">\n\n            <h1>Conversion Page</h1>\n            {fullURL ? (\n                <h3>{`Converting from: ${fullURL}`}</h3>\n            ) : (\n                <p>No URL entered</p>\n            )}\n            <button type=\"button\" onClick={() => props.onClear()}>\n                clear\n            </button>\n            <br />\n            <button>\n                <Link to=\"/\">Go back </Link>\n            </button>\n            <br />\n            <br />\n\n            <p><b>playlist_ID:</b> {`${playlist_ID}`}</p>\n            <p><b>GET address:</b> {`${get_address}`}</p>\n            <p><b>Data:</b> {props.userDetails.data}</p>\n\n            <p>Datahound</p>\n        </div>\n    )\n}\n//<p><b>Data:</b> {`${props.userDetails.data}`}</p>\nexport default App"]},"metadata":{},"sourceType":"module"}