{"ast":null,"code":"var _jsxFileName = \"/Users/Rasheed/WS/REPOS/full-mern-stack-video/client/src/pages/Home.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { Button } from 'react-bootstrap';\nimport \"./style.css\";\nimport { credentials } from \"../credentials\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  //https://www.youtube.com/watch?v=EwdsnGfrd-k&list=PL7RVBKKO9UqyEr8kqLe9152SIktQjDl64\n  const history = useHistory();\n  const CLIENT_ID = credentials.spotify_API_ID;\n  const SPOTIFY_AUTHORIZE_ENDPOINT = 'http://accounts.spotify.com/authorize';\n  const REDIRECT_URL_AFTER_LOGIN = 'http://localhost:3000/';\n  const SCOPES = ['playlist-modify-private', 'playlist-modify-public', 'user-library-modify', 'user-library-read', 'user-read-email'];\n  const SCOPES_URL_PARAM = SCOPES.join(\"%20\");\n\n  const submitHandler = event => {\n    event.preventDefault(); // make the post request here but don't clear the state information.\n    // since you'll need the state information to pass between components,\n    // once you are done with the confirm page, you can clear the state.\n  };\n\n  const handleLogin = () => {\n    //const full_url = '${SPOTIFY_AUTHORIZE_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URL_AFTER_LOGIN}&scope=${SCOPES_URL_PARAM}&response_type=token&show_dialog=true'\n    const full_url = SPOTIFY_AUTHORIZE_ENDPOINT + '?client_id=' + CLIENT_ID + '&redirect_uri=' + REDIRECT_URL_AFTER_LOGIN + '&scope=' + SCOPES_URL_PARAM + '&response_type=token' + '&show_dialog=true'; //console.log(full_url)\n\n    window.location = full_url;\n  };\n\n  const getReturnedParamsFromSpotifyAuth = hash => {\n    const stringAfterHash = hash.substring(1);\n    const paramsURL = stringAfterHash.split(\"&\");\n    const paramsSplitUp = paramsURL.reduce((accumulater, currentValue) => {\n      //console.log(currentValue)\n      const [key, value] = currentValue.split(\"=\");\n      accumulater[key] = value;\n      return accumulater;\n    }, {});\n    return paramsSplitUp;\n  };\n\n  useEffect(() => {\n    if (window.location.hash) {\n      const {\n        access_token,\n        expires_in,\n        token_type\n      } = getReturnedParamsFromSpotifyAuth(window.location.hash);\n      console.log(access_token);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"jumbotron text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Convert Youtube to Spotify!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"yturl\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Youtube URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"https://www.youtube.com/watch?v=EwdsnGfrd-k&list=PL7RVBKKO9UqyEr8kqLe9152SIktQjDl64\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"https://www.youtube.com/playlist?list=PLDIoUOhQQPlXr63I_vwF9GD8sAKh77dWU\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: props.onFirstChange,\n          type: \"text\",\n          id: \"yturl\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => history.push(\"/convert\"),\n        children: \" Convert \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"info\",\n      type: \"submit\",\n      onClick: handleLogin,\n      children: \"Login to spotify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Plan Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Includes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Free\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Up to 25 songs to convert per submission\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"$5.99/month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Unlimited songs to convert per submission\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"bz2N+u0mX89LO9zOCfVCA9Sa20M=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Rasheed/WS/REPOS/full-mern-stack-video/client/src/pages/Home.js"],"names":["React","useEffect","useHistory","Button","credentials","App","props","history","CLIENT_ID","spotify_API_ID","SPOTIFY_AUTHORIZE_ENDPOINT","REDIRECT_URL_AFTER_LOGIN","SCOPES","SCOPES_URL_PARAM","join","submitHandler","event","preventDefault","handleLogin","full_url","window","location","getReturnedParamsFromSpotifyAuth","hash","stringAfterHash","substring","paramsURL","split","paramsSplitUp","reduce","accumulater","currentValue","key","value","access_token","expires_in","token_type","console","log","onFirstChange","push"],"mappings":"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","sourcesContent":["import { React, useEffect } from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport { Button } from 'react-bootstrap';\n\nimport \"./style.css\"\nimport { credentials } from \"../credentials\"\n\nfunction App(props) {\n    //https://www.youtube.com/watch?v=EwdsnGfrd-k&list=PL7RVBKKO9UqyEr8kqLe9152SIktQjDl64\n    const history = useHistory();\n    const CLIENT_ID = credentials.spotify_API_ID;\n    const SPOTIFY_AUTHORIZE_ENDPOINT = 'http://accounts.spotify.com/authorize';\n    const REDIRECT_URL_AFTER_LOGIN = 'http://localhost:3000/';\n    const SCOPES = [\n        'playlist-modify-private',\n        'playlist-modify-public',\n        'user-library-modify',\n        'user-library-read',\n        'user-read-email'\n    ]\n    const SCOPES_URL_PARAM = SCOPES.join(\"%20\")\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        // make the post request here but don't clear the state information.\n        // since you'll need the state information to pass between components,\n        // once you are done with the confirm page, you can clear the state.\n    };\n\n    const handleLogin = () => {\n        //const full_url = '${SPOTIFY_AUTHORIZE_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URL_AFTER_LOGIN}&scope=${SCOPES_URL_PARAM}&response_type=token&show_dialog=true'\n        const full_url = \n        SPOTIFY_AUTHORIZE_ENDPOINT+\n        '?client_id='+CLIENT_ID+\n        '&redirect_uri='+REDIRECT_URL_AFTER_LOGIN+\n        '&scope='+SCOPES_URL_PARAM+\n        '&response_type=token'+\n        '&show_dialog=true'\n        //console.log(full_url)\n        window.location = full_url\n    };\n\n    const getReturnedParamsFromSpotifyAuth = (hash) => {\n        const stringAfterHash = hash.substring(1)\n        const paramsURL = stringAfterHash.split(\"&\")\n        const paramsSplitUp = paramsURL.reduce((accumulater, currentValue) => {\n            //console.log(currentValue)\n            const [key, value] = currentValue.split(\"=\");\n            accumulater[key] = value;\n            return accumulater;\n        }, {});\n        return paramsSplitUp;\n    };\n\n    useEffect(() => {\n        if(window.location.hash){\n            const {access_token, expires_in, token_type} = getReturnedParamsFromSpotifyAuth(window.location.hash);\n            console.log(access_token)\n        }\n    })\n\n    return (\n        <div className=\"jumbotron text-center\">\n            <h1>Convert Youtube to Spotify!</h1>\n            <form onSubmit={submitHandler}>\n                <div>\n                    <label htmlFor=\"yturl\"><b>Youtube URL</b></label>\n                    <br />\n                    <p>https://www.youtube.com/watch?v=EwdsnGfrd-k&list=PL7RVBKKO9UqyEr8kqLe9152SIktQjDl64</p>\n                    <p>https://www.youtube.com/playlist?list=PLDIoUOhQQPlXr63I_vwF9GD8sAKh77dWU</p>\n                    <input onChange={props.onFirstChange} type=\"text\" id=\"yturl\" />\n                </div>\n                <button type=\"button\" onClick={() => history.push(\"/convert\")}> Convert </button>\n            </form>\n\n            <Button variant=\"info\" type=\"submit\" onClick={handleLogin}>\n                Login to spotify\n            </Button>\n\n\n            <br />\n            <br />\n            <table>\n                <tr>\n                    <th>Plan Price</th>\n                    <th>Includes</th>\n                </tr>\n                <tr>\n                    <td>Free</td>\n                    <td>Up to 25 songs to convert per submission</td>\n                </tr>\n                <tr>\n                    <td>$5.99/month</td>\n                    <td>Unlimited songs to convert per submission</td>\n                </tr>\n            </table>\n\n        </div>\n    )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}