{"ast":null,"code":"var _jsxFileName = \"/Users/Rasheed/WS/REPOS/full-mern-stack-video/client/src/pages/Convert/Convert.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport \"../style.css\";\nimport { credentials } from \"../../credentials\";\nimport DataHound from \"./DataHound\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  const [data, setData] = useState([]);\n  const playlist_uris = [];\n\n  function get_playlist_id(URL) {\n    //https://www.youtube.com/watch?v=EwdsnGfrd-k&list=PL7RVBKKO9UqyEr8kqLe9152SIktQjDl64\n    const num_equal_signs = (URL.match(/=/g) || []).length;\n    if (URL !== null && num_equal_signs === 1) return URL.split(\"=\")[1];else if (URL !== null && num_equal_signs === 2) return URL.split(\"=\")[2];else return -1;\n  }\n\n  function get_api_URL(playlist_ID, key) {\n    //AIzaSyBK9I7LUg_7JHmSg8QrNhxkwK98MnuOKKQ\n    if (playlist_ID === -1) return \"No GET address\";else return 'https://youtube.googleapis.com/youtube/v3/playlistItems?part=snippet%2CcontentDetails&maxResults=25&playlistId=' + playlist_ID + '&key=' + key;\n  }\n\n  function get_title_list(get_url) {\n    var data = null;\n    var title_list = [];\n    fetch(get_url, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(res => res.json()).then(json => {\n      data = json; //trim data\n\n      for (var i = 0; i < data.items.length; i++) {\n        title_list.push(data.items[i].snippet.title);\n      } //Remove extra\n\n\n      for (var i = 0; i < title_list.length; i++) {\n        title_list[i] = title_list[i].replace(/\\(.+\\)/ig, '').replace(/\\[.+\\]/ig, '').replace(/official/ig, '').replace(/featuring/ig, '').replace(/feat/ig, '').replace(/video/ig, '').replace(/1080p/ig, '').replace(/music/ig, '').replace(/Audio/ig, ''); //console.log(title_list[i])\n      } //\"https://api.spotify.com/v1/search?query=track%3A{}+artist%3A{}&type=track&offset=0&limit=20\"\n\n\n      var query = \"\";\n      var pre_query = \"https://api.spotify.com/v1/search?query=\";\n      var post_query = \"&type=track&offset=0&limit=20\";\n\n      for (var i = 0; i < title_list.length; i++) {\n        //console.log(title_list[i])\n        if (title_list[i].includes(\"-\")) {\n          query = \"track:\" + title_list[i].split(\"-\")[1].trim() + \"+\" + \"artist:\" + title_list[i].split(\"-\")[0].trim();\n          query = query.replace(/\\s/ig, '%20');\n        } else {\n          query = \"track:Never%20Gonna%20Give%20You%20Up+artist:Rick%20Ashley\";\n        }\n\n        title_list[i] = pre_query + query + post_query; //console.log(title_list[i])\n      } //clear data\n\n\n      props.userDetails.data = title_list;\n      props.userDetails.DataisLoaded = true;\n    }).then(() => {\n      get_tracks(title_list);\n    });\n  }\n\n  function get_tracks(title_uri_list) {\n    //console.log(\"get Tracks Method\\n\", title_uri_list)\n    var mylist = [];\n    axios('https://accounts.spotify.com/api/token', {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Authorization': 'Basic ' + btoa(credentials.spotify_API_ID + ':' + credentials.spotify_API_key)\n      },\n      data: 'grant_type=client_credentials',\n      method: 'POST'\n    }).then(tokenResponse => {\n      //console.log(\"Token:\", tokenResponse.data.access_token)\n      //Loop through\n      for (var i = 0; i < title_uri_list.length; i++) {\n        axios(title_uri_list[i], {\n          method: 'GET',\n          headers: {\n            'Authorization': 'Bearer ' + tokenResponse.data.access_token,\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          }\n        }).then(serchResponse => {\n          try {\n            //Assign trackID\n            title_uri_list[i] = \"spotify:track:\" + serchResponse.data[\"tracks\"][\"items\"][0][\"id\"] + \",\";\n          } catch (error) {\n            //Rick Ashley\n            title_uri_list[i] = \"spotify:track:4cOdK2wGLETKBW3PvgPWqT,\";\n          }\n\n          console.log(\"Pushing\", title_uri_list[i], \"to my list\");\n          mylist.push(title_uri_list[i]);\n          console.log(\"myList length\", mylist.length); //playlist_uris.push(title_uri_list[i])\n          //console.log(\"Playlist uri\",playlist_uris[i])\n        }); //end then(searchResponse)\n        //console.log(title_uri_list[i])\n      } //end For loop\n\n    }).then(data => {\n      console.log(\"Title uri list\", title_uri_list);\n      console.log(\"mylist\", mylist);\n    });\n  }\n\n  const {\n    fullURL\n  } = props.userDetails;\n  const playlist_ID = get_playlist_id(fullURL);\n  const get_address = get_api_URL(playlist_ID, credentials.youtube_API_key);\n  get_title_list(get_address);\n  get_tracks(props.userDetails.data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"jumbotron text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Conversion Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this), fullURL ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: `Converting from: ${fullURL}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No URL entered\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => props.onClear(),\n      children: \"clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Go back \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"playlist_ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 16\n      }, this), \" \", `${playlist_ID}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"GET address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 16\n      }, this), \" \", `${get_address}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Data:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 16\n      }, this), \" \", props.userDetails.data]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"hhQqYsxLIv1exGOzUvDGOVv6fXw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Rasheed/WS/REPOS/full-mern-stack-video/client/src/pages/Convert/Convert.js"],"names":["React","useEffect","useState","Link","axios","credentials","DataHound","App","props","data","setData","playlist_uris","get_playlist_id","URL","num_equal_signs","match","length","split","get_api_URL","playlist_ID","key","get_title_list","get_url","title_list","fetch","headers","then","res","json","i","items","push","snippet","title","replace","query","pre_query","post_query","includes","trim","userDetails","DataisLoaded","get_tracks","title_uri_list","mylist","btoa","spotify_API_ID","spotify_API_key","method","tokenResponse","access_token","serchResponse","error","console","log","fullURL","get_address","youtube_API_key","onClear"],"mappings":"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","sourcesContent":["import { React, useEffect, useState } from 'react'\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\n\nimport \"../style.css\"\nimport { credentials } from \"../../credentials\"\nimport DataHound from \"./DataHound\"\n\n\nfunction App(props) {\n    const [data, setData] = useState([]);\n    const playlist_uris = []\n\n    function get_playlist_id(URL) {\n        //https://www.youtube.com/watch?v=EwdsnGfrd-k&list=PL7RVBKKO9UqyEr8kqLe9152SIktQjDl64\n        const num_equal_signs = (URL.match(/=/g) || []).length\n        if (URL !== null && num_equal_signs === 1)\n            return URL.split(\"=\")[1];\n        else if (URL !== null && num_equal_signs === 2)\n            return URL.split(\"=\")[2];\n        else\n            return -1\n    }\n\n    function get_api_URL(playlist_ID, key) {\n        //AIzaSyBK9I7LUg_7JHmSg8QrNhxkwK98MnuOKKQ\n        if (playlist_ID === -1)\n            return \"No GET address\"\n        else\n            return 'https://youtube.googleapis.com/youtube/v3/playlistItems?part=snippet%2CcontentDetails&maxResults=25&playlistId=' + playlist_ID + '&key=' + key\n    }\n\n\n    function get_title_list(get_url) {\n        var data = null\n        var title_list = []\n        fetch(get_url, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        })\n            .then((res) => res.json())\n            .then((json) => {\n                data = json\n                //trim data\n                for (var i = 0; i < data.items.length; i++) {\n                    title_list.push(data.items[i].snippet.title)\n                }\n\n                //Remove extra\n                for (var i = 0; i < title_list.length; i++) {\n                    title_list[i] = title_list[i]\n                        .replace(/\\(.+\\)/ig, '')\n                        .replace(/\\[.+\\]/ig, '')\n                        .replace(/official/ig, '')\n                        .replace(/featuring/ig, '')\n                        .replace(/feat/ig, '')\n                        .replace(/video/ig, '')\n                        .replace(/1080p/ig, '')\n                        .replace(/music/ig, '')\n                        .replace(/Audio/ig, '')\n                    //console.log(title_list[i])\n                }\n                //\"https://api.spotify.com/v1/search?query=track%3A{}+artist%3A{}&type=track&offset=0&limit=20\"\n                var query = \"\"\n                var pre_query = \"https://api.spotify.com/v1/search?query=\"\n                var post_query = \"&type=track&offset=0&limit=20\"\n                for (var i = 0; i < title_list.length; i++) {\n                    //console.log(title_list[i])\n                    if (title_list[i].includes(\"-\")) {\n                        query = \"track:\" + title_list[i].split(\"-\")[1].trim() + \"+\" +\n                            \"artist:\" + title_list[i].split(\"-\")[0].trim()\n                        query = query.replace(/\\s/ig, '%20')\n                    }\n                    else {\n                        query = \"track:Never%20Gonna%20Give%20You%20Up+artist:Rick%20Ashley\"\n                    }\n                    title_list[i] = pre_query + query + post_query\n\n                    //console.log(title_list[i])\n                }\n                //clear data\n                props.userDetails.data = title_list\n                props.userDetails.DataisLoaded = true\n            })\n            .then(() => {\n                get_tracks(title_list)\n            })\n    }\n\n    function get_tracks(title_uri_list) {\n        //console.log(\"get Tracks Method\\n\", title_uri_list)\n        var mylist = []\n        axios('https://accounts.spotify.com/api/token', {\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Authorization': 'Basic ' + btoa(credentials.spotify_API_ID + ':' + credentials.spotify_API_key)\n            },\n            data: 'grant_type=client_credentials',\n            method: 'POST'\n        }).then(tokenResponse => {\n            //console.log(\"Token:\", tokenResponse.data.access_token)\n\n            //Loop through\n            \n            for (var i = 0; i < title_uri_list.length; i++) {\n                axios(title_uri_list[i], {\n                    method: 'GET',\n                    headers: {\n                        'Authorization': 'Bearer ' + tokenResponse.data.access_token,\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json',\n                    }\n                })\n                    .then(serchResponse => {\n                        try {\n                            //Assign trackID\n                            title_uri_list[i] = \"spotify:track:\" + serchResponse.data[\"tracks\"][\"items\"][0][\"id\"] + \",\"\n                        } catch (error) {\n                            //Rick Ashley\n                            title_uri_list[i] = \"spotify:track:4cOdK2wGLETKBW3PvgPWqT,\"\n                        }\n                        console.log(\"Pushing\",title_uri_list[i],\"to my list\")\n                        mylist.push(title_uri_list[i])\n                        console.log(\"myList length\",mylist.length)\n                        //playlist_uris.push(title_uri_list[i])\n                        //console.log(\"Playlist uri\",playlist_uris[i])\n\n                    })//end then(searchResponse)\n                    \n                //console.log(title_uri_list[i])\n            } //end For loop\n\n        }).then((data) => {\n            console.log(\"Title uri list\",title_uri_list)\n            console.log(\"mylist\",mylist)\n        })\n    }\n\n\n\n    const { fullURL } = props.userDetails;\n    const playlist_ID = get_playlist_id(fullURL)\n    const get_address = get_api_URL(playlist_ID, credentials.youtube_API_key)\n    get_title_list(get_address)\n    get_tracks(props.userDetails.data)\n\n    return (\n        <div class=\"jumbotron text-center\">\n\n            <h1>Conversion Page</h1>\n            {fullURL ? (\n                <h3>{`Converting from: ${fullURL}`}</h3>\n            ) : (\n                <p>No URL entered</p>\n            )}\n            <button type=\"button\" onClick={() => props.onClear()}>\n                clear\n            </button>\n            <br />\n            <button>\n                <Link to=\"/\">Go back </Link>\n            </button>\n            <br />\n            <br />\n\n            <p><b>playlist_ID:</b> {`${playlist_ID}`}</p>\n            <p><b>GET address:</b> {`${get_address}`}</p>\n            <p><b>Data:</b> {props.userDetails.data}</p>\n\n\n        </div>\n    )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}